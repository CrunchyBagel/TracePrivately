swagger: '2.0'
info:
    title: Trace Privately KeyServer API
    description: |
        This is the format of the API that the Trace Privately app expects from its corresponding key server.

    version: "0.1"

host: example.com

schemes:
    - https

basePath: /api

produces:
    - application/json

securityDefinitions:
    BearerAuth:
        type: apiKey
        in: header
        name: Authorization

paths:
    /auth:
        post:
            operationId: "keyserver_auth"
            summary: Generate an authentication token for subsequent API requests
            description: |
                Server should create a token that expires periodically (e.g. after X number. of days).
                If one of the other API keys doesn't have a valid key, a 401 is returned and the client
                should reauthenticate using this endpoint. Client may include the old token as authorization
                in this request to invalidate it.
            security:
                -  BearerAuth: []
            produces:
                - "application/json"
            parameters:
                - in: body
                  name: Request data
                  schema:
                      type: object
                      description: The structure is undefined, as its depends on what authentication data the app is using.
            responses:
                200:
                    description: A newly-generated token
                    schema:
                        type: object
                        required:
                            - status
                            - token
                        properties:
                            status:
                                type: string
                                example: "OK"
                                description: OK
                            token:
                                type: string
                                example: "SOME_TOKEN_DATA"
                                description: This can be in whatever format is necessary for your system
                            expires_at:
                                type: string
                                format: date-time
                                description: |
                                    This indicates when the token will definitely no longer work, meaning the client
                                    can simply request a new one without needing determine it's invalidated. Server
                                    can choose expiry time, and it can expire the token prematurely if necessary. If expired
                                    prematurely, client will receive a 401 and request a new token.

                401:
                    description: Unable to authorize user.
            
    /infected:
        get:
            operationId: "keyserver_infected"
            summary: Retrieve a list of active infected keys
            description: |
                This endpoint returns a list of keys for users that have indicated that have contracted COVID-19.
            security:
                -  BearerAuth: []
            produces:
                - "application/json"
            parameters:
                - name: since
                  description: |
                      This restricts the date for which keys are returned. In other words, only return keys submitted after this date. The server
                      may impose its only minimum date if this date isn't specified, such as a maximum of 14 days worth of infected keys. Expects a date time in ISO 8601 format.
                  in: query
                  required: false
                  type: string
                  format: date-time

            responses:
                200:
                    description: A list of infected keys since the specified date.
                    schema:
                        type: object
                        required:
                            - status
                            - date
                            - keys
                        properties:
                            status:
                                type: string
                                example: "OK"
                                description: OK
                            date:
                                type: string
                                format: date-time
                                description: The date from which infected keys are returned
                            keys:
                                type: array
                                items:
                                    type: object
                                    required:
                                    - d
                                    - r
                                    description: Contains information about a single key
                                    properties:
                                        d:
                                            type: string
                                            example: "Base 64 Encoded String"
                                            description: Base 64 encoded binary data representing a single key
                                        r:
                                            type: integer
                                            example: 1234
                                            description: The rolling start number for the key.
                            deleted_keys:
                                description: |
                                    A list of keys that have subsequently been marked as not infected. Client should remove them from their cache.
                                    These keys should also honor the "since" parameter and return deleted keys based on when their status was changed to deleted.
                                type: array
                                items:
                                    type: object
                                    required:
                                    - d
                                    - r
                                    description: Contains information about a single key
                                    properties:
                                        d:
                                            type: string
                                            example: "Base 64 Encoded String"
                                            description: Base 64 encoded binary data representing a single key
                                        r:
                                            type: integer
                                            example: 1234
                                            description: The rolling start number for the key.
                401:
                    description: Unable to authorize user. Need to request a token before calling this endpoint again.

    /submit:
        post:
            operationId: "keyserver_submit"
            summary: Submit keys that represent a person who has contracted COVID-19.
            description: |
                This endpoint allows the client to submit keys after its user has indicated they have contracted COVID-19.
            security:
                -  BearerAuth: []
            consumes:
                - "application/json"
            produces:
                - "application/json"

            parameters:
                - in: body
                  name: Request data
                  schema:
                      type: object
                      properties:
                          keys:
                              type: array
                              description: List of infected keys
                              minimum: 1
                              items:
                                  type: object
                                  required:
                                    - d
                                    - r
                                  description: Contains information about a single key
                                  properties:
                                      d:
                                        type: string
                                        example: "Base 64 Encoded String"
                                        description: Base 64 encoded binary data representing a single key
                                      r:
                                        type: integer
                                        example: 1234
                                        description: The rolling start number for the key.
                          identifier:
                              type: string
                              description: An optional unique identifier from a previous submission so newly-submitted keys can be appended to an existing submission.
            responses:
                200:
                    description: A list of infected keys since the specified date.
                    schema:
                        type: object
                        required:
                            - status
                        properties:
                            status:
                                type: string
                                example: "OK"
                                description: OK
                            identifier:
                                type: string
                                example: "SOME_UNIQUE_IDENTIFIER"
                                description: An identifier specific to this report, so the client can append new keys to the newly-created submission.

                401:
                    description: Unable to authorize user. Need to request a token before calling this endpoint again.
